"""Add phone_number, department, and position fields to User model

Revision ID: 81c22af90553
Revises: 
Create Date: 2025-05-23 10:34:30.695414

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '81c22af90553'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('test_answer', schema=None) as batch_op:
        batch_op.drop_constraint('test_answer_question_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'test_question', ['question_id'], ['id'], ondelete='CASCADE')

    with op.batch_alter_table('test_question', schema=None) as batch_op:
        batch_op.drop_constraint('test_question_test_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'tests', ['test_id'], ['id'], ondelete='CASCADE')

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column('role',
               existing_type=sa.VARCHAR(length=20),
               nullable=False)
        batch_op.alter_column('phone_number',
               existing_type=sa.VARCHAR(length=13),
               type_=sa.String(length=20),
               existing_nullable=True)
        batch_op.drop_constraint('users_phone_number_key', type_='unique')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_unique_constraint('users_phone_number_key', ['phone_number'])
        batch_op.alter_column('phone_number',
               existing_type=sa.String(length=20),
               type_=sa.VARCHAR(length=13),
               existing_nullable=True)
        batch_op.alter_column('role',
               existing_type=sa.VARCHAR(length=20),
               nullable=True)

    with op.batch_alter_table('test_question', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('test_question_test_id_fkey', 'tests', ['test_id'], ['id'])

    with op.batch_alter_table('test_answer', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('test_answer_question_id_fkey', 'test_question', ['question_id'], ['id'])

    # ### end Alembic commands ###
